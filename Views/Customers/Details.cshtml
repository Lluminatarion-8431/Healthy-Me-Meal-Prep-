@model Healthy_Me.Models.Customer

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.firstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.firstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.lastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.lastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.goal)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.goal)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.age)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.age)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.height)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.height)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.streetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.streetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.zipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.zipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.city)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.city)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.state)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.state)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.nutritionProfile)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.nutritionProfile.Id)
        </dd>
        @*<dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.IdentityUser)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.IdentityUser.Id)
            </dd>*@
    </dl>
</div>

<<<<<<< HEAD:Views/Customer/Details.cshtml

=======
<div id="map"></div>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=[PrivateAPKKey]&callback=initMap">
</script>
<script>
        var geocoder;
        var map;

 function initMap() {
    map = new google.maps.Map(
    document.getElementById('map'), {zoom: 15, center: {lat: 41.881832, lng: -87.623177} });
     geocoder = new google.maps.Geocoder();
     codeAddress();
 }
    function codeAddress() {
        geocoder.geocode({ 'address': address }, function (results, status) {
        if( status == google.maps.GeocoderStatus.OK ) {
            console.log("results: ", results);
            console.log("status: ", status);
            //In this case it creates a marker, but you can get the lat and lng from the location.LatLng
            map.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker( {
                map: map,
                position: results[0].geometry.location
            } );
        } else {
            alert( 'Geocode was not successful for the following reason: ' + status );
        }
    } );
}
</script>
>>>>>>> a55b333829080739057e863bede429f8b3a01700:Views/Customers/Details.cshtml

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

